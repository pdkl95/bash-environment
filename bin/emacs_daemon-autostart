#!/bin/bash

: ${EMACS:=/usr/bin/emacs}
: ${EMACSCLIENT:=/usr/bin/emacsclient}
: ${EMACS_OPTS:=--daemon}
: ${EMACS_SOCKET:=/tmp/emacs${UID}/server}

has_socket() {
    [[ -e "${EMACS_SOCKET}" ]]
}

launch_wrapper() {
    logfile=$(mktemp $HOME/.emacs.d/daemon.log.XXXXXX)
    trap "rm -f '${logfile}'" EXIT
    
    exec -l "${SHELL}" -c "exec \"${EMACS}\" $*" </dev/null &>"${logfile}" &
    pid=$!

    # wait on the daemon...
    for (( t=${EMACS_TIMEOUT:-30}; t > 0; t-- )); do
        sleep 1
        if ! kill -0 ${pid} 2>/dev/null; then
            wait ${pid}             # get exit status
            status=$?
            [[ ${status} -ne 0 || -n ${EMACS_DEBUG} ]] && cat "${logfile}"
            if has_socket ; then
                echo "Emacs daemon listening on: ${EMACS_SOCKET}"
                if [[ -n "${AUTOSTART_EMACS_CMD}" ]] ; then
                    command emacsclient-emacs-24 --create-frame --no-wait ${AUTOSTART_EMACS_CMD}
                fi
            else
              echo "Error: emacs didn't make socket at ${EMACS_SOCKET}"
            fi
            exit ${status}
        fi
    done

    cat "${logfile}"
    echo "${0##*/}: timeout waiting for ${EMACS} to detach" >&2
    kill ${pid} $(pgrep -P ${pid}) 2>/dev/null
    exit 1
}


start() {
    if has_socket ; then
        echo "PID file found: ${EMACS_PIDFILE}"
        if has_daemon ; then
            echo "Emacs is already running! (PID=$(cat ${EMACS_PIDFILE}))"
            exit 1
        else
            echo "But no daemon was running at PID=${pid}"
            echo "Removing stale EMACS_PIDFILE..."
            rm -f "${EMACS_PIDFILE}"
        fi
    fi

    SHELL=${EMACS_SHELL:-$(awk -F: "\$1 == \"${USER}\" { print \$7 }" /etc/passwd)}
    export SHELL EMACS EMACS_TIMEOUT EMACS_DEBUG

    echo "Starting Emacs daemon..."
    launch_wrapper "${EMACS_OPTS}"
}

stop() {
    if has_socket ; then
        ${EMACSCLIENT} --eval "(server-shutdown)"
    else
      echo "No daemon socket found! Is emacs running?"
    fi
}

case "$1" in
start) start ;;
stop)  stop  ;;
*)     
    start
    #echo "Unknown command: $1"
esac


