# make sure th basic distro settings are what we start with
$include /etc/inputrc

### OPTIONS ###
set bell-style none
set bind-tty-special-chars off
set blink-matching-paren on
set completion-ignore-case off
#set completion-prefix-display-length 8
set completion-prefix-display-length 0
set completion-query-items 350
set convert-meta off
set echo-control-characters off
set editing-mode emacs
set enable-meta-key on
set expand-tilde off
set input-meta on
set keymap emacs
set mark-directories on
set mark-symlinked-directories on
set match-hidden-files off
set menu-complete-display-prefix off
set output-meta on
set page-completions off
set print-completions-horizontally off
set revert-all-at-newline on
set show-all-if-ambiguous on
set show-all-if-unmodified on
set skip-completed-text on
set visible-stats off

### KEY BINDINGS ###

# DEBUG THESE BINGINGS EASILY
# JUST DUMP THE TABLE
"\edf": dump-functions
"\edv": dump-variables
"\edm": dump-macros

Return: accept-line
#Newline: accept-line

# <MENU> button
"\e[29~": menu-complete
"\e[29$": menu-complete-backward

### HACK: using vertical tab as a 2nd ESC (HACKED URXVT ONLY!)
#  non-working:
#    "\033\033\001\015": "S-Return"
#    "\033\033\003\015": "S-C-Return"
#    "\033\033\004\015": "M-Return"
#    "\033\033\006\015": "C-M-Return"
#    "\033\033\001\011": "S-tab"
#    "\033\033\006\011": "M-tab"
#
#### RETURN ####
# <shfit>+RETURN
#"\033\001\015": edit-and-execute-command
"\033\033\001\015": accept-line
# <control>-RETURN
"\033\033\002\015": operate-and-get-next

# <shift>+<meta>+RETURN  ***WARNING: the shfit ends up lost! ***
"\033\033\004\015": accept-line
"\033\033\007\015": edit-and-execute-command
# <super>-RETURN
"\033\033\012\015": operate-and-get-next
# <alt>-RETURN
"\033\033\013\015": edit-and-execute-command
# <hyper>-RETURN
"\033\033\014\015": "' >> echo '"
#
#### TAB ####
# <control>-TAB
"\033\033\002\011": insert-completions
#
#### SPACE ####
# <shift>-SPACE
"\033\033\001\040": set-mark
# <control>-SPACE
"\033\033\002\040": yank-last-arg
# <meta>-SPACE
"\033\033\006\040": yank-nth-arg

"\033\033\012\040": set-mark
"\033\033\013\040": set-mark
"\033\033\014\040": magic-space

"\033\033\012\077\001": "'\e[3~'\e[3~"
"\033\033\013\077\001": "\"\eOd\e\\ \"\eOD\eOD"
"\033\033\014\077\001": "'\eOd\e\\ '\eOD\eOD"
"\033\033\012\077\002": "'\e[3~'\e[3~"
"\033\033\013\077\002": "\e \eOc\"\eOC\"\eOC"
"\033\033\014\077\002": "\e \eOc'\eOC'\eOC"

# for alias debugging
Control-_: undo
Control-d: unix-filename-rubout

"\ed": shell-backword-kill-word
"\ek": shell-kill-word
"\ew": copy-region-as-kill
"\er": redraw-current-line

"\et": transpose-chars
Control-t: transpose-words
Control-s: character-search-backward
Control-r: character-search

##### Search-as-you-go is much vaster
# UP
"\e[A": history-search-backward
# DOWN
"\e[B": history-search-forward
##### but keepe the standard prev/next version on <shift>+
# <shift>+UP
"\e[a": previous-history
# <shift>+DOWN
"\e[b": next-history
##### incremental search of history
# <control>+UP
"\eOa": reverse-search-history
# <control>+DOWN
"\eOb": forward-search-history

#####
# PAGEUP
"\e[5~": menu-complete-backward
# PAGEDOWN
"\e[6~": menu-complete
# <control>+PAGEUP
"\e[5^": non-incremental-reverse-search-history
# <control>+PAGEDOWN
"\e[6^": non-incremental-forward-search-history

##### word-by-word horizontal movement in the shell
##### So important, it's mount more than once
# <control>+RIGHT
"\eOc": shell-forward-word
# <control>+LEFT
"\eOd": shell-backward-word
# <shift>+RIGHT
"\e[c": forward-word
# <shift>+LEFT
"\e[d": backward-word


##### <delete> - makes sure it's still bound to the correct
##### comman as it gets rewritten fairly eaisily
"\e[3~": delete-char

##### go to kust before the first option of THIS command
##### that is, if you had alread typed
#####    echo foo bar baz
##### no matter the point is now, you end here
#####    echo _ foo bar baz
##### a single space is added to so the point is
##### _between_ whitespace.
##### This is very similar to the next macro, but stays
##### within the current command only, without touching
##### the history
# <meta>+a
"\ea": "Oc "

##### load the previous comand, and edit
##### move to enter the FIRST option
##### example, if the previos command was:
#####     prog foo bar baz
##### Then pressin C-f would scroll up oneto the history
##### log to that commmand, and put the editing point
##### at the where the section marker indicates here:
#####     prog _ foo bar baz
##### A single extra space is also added such that the point
##### is now _between_ spaces and is read for something else
##### to be entered.
Control-f: "[AOc "

### ----- Bash-specific macros ----- ###
$if Bash
    ##### remap keyboard macro recording to modern emacs style
    # <F3>
    "\e[13~": start-kbd-macro
    # <F4>
    "\e[14~": end-kbd-macro
    # <F5>
    "\e[15~": call-last-kbd-macro

    ##### dabbrev expansion experiment
    # shift+<TAB>
    "\e[Z": dynamic-complete-history
    # META+h
    #"\eh": dabbrev-expand

    ##### insert ALL possible completions into current line
    #"\ei": insert-completions

    ##### if a History Expansion is ready when you hit space
    ##### apropriate expansion wil execute *immediately* with the
    ##### results automagically replacing the current command as
    ##### if you hasd typed again it from scratch
    # <space>
    #Space: magic-space

    ##### cd to whatever was named LAST in the previous command
    ##### for example, typing
    #####     cp -r /some/other/dir/ foo<RETURN><ALT>+l
    ##### will, after the copy is done, have you end up
    ##### in the newly copied "foo/" directory. It does an
    ##### 'ls' for you as ell once it gets there, as thhat's alost
    ##### certainly what you want to see first.
    # <alt>+l
    #"\el": 'cd !$ ls -lh'

    ##### A shortcut for the previos shortcut, that presses
    ##### the <return> in the middle for your
    # <alt>+L
    #"\eL": 'l'

    ##### reload the entire bash enviroment by running your
    ##### ~/.bashrc script again from the top
    ##### This compliments the builting C-xC-r to relaod *THIS* file
    # <control>+x <control>+b
    #"\C-x\C-b": ". ~/.bashrc"

    # cd up to the parent directory
    # <control>+p
    Control-p: "cd .."
$endif


# Local Variables:
# mode: sh
# sh-basic-offset: 4
# sh-shell: bash
# End:
